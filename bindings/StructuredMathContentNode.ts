// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { AbstractionMetadata } from "./AbstractionMetadata";
import type { CollapsibleBlockNode } from "./CollapsibleBlockNode";
import type { MathNode } from "./MathNode";
import type { ProofDisplayNode } from "./ProofDisplayNode";
import type { RichTextSegment } from "./RichTextSegment";
import type { SectionContentNode } from "./SectionContentNode";
import type { SelectableProperty } from "./SelectableProperty";
import type { TheoremLikeKind } from "./TheoremLikeKind";

/**
 * Represents formal mathematical structures like definitions, theorems, etc.
 */
export type StructuredMathContentNode =
  | {
    "Definition": {
      term_display: Array<RichTextSegment>;
      formal_term: MathNode | null;
      label: string | null;
      body: Array<SectionContentNode>;
      /**
       * Metadata relating to the 4-level abstraction model.
       */
      abstraction_meta: AbstractionMetadata | null;
      selectable_properties: Array<SelectableProperty> | null;
    };
  }
  | {
    "TheoremLike": {
      kind: TheoremLikeKind;
      label: string | null;
      statement: Array<SectionContentNode>;
      proof: ProofDisplayNode | null;
      abstraction_meta: AbstractionMetadata | null;
    };
  }
  | { "Proof": ProofDisplayNode }
  | {
    "Example": {
      label: string | null;
      introduction: Array<SectionContentNode> | null;
      body: Array<SectionContentNode>;
      explanation: Array<SectionContentNode> | null;
    };
  }
  | { "Remark": { label: string | null; body: Array<SectionContentNode> } }
  | {
    "Axiom": {
      label: string | null;
      statement: Array<SectionContentNode>;
      abstraction_meta: AbstractionMetadata | null;
    };
  }
  | {
    "Exercise": {
      label: string | null;
      problem_statement: Array<SectionContentNode>;
      hints: Array<CollapsibleBlockNode> | null;
      solution: CollapsibleBlockNode | null;
    };
  };
