// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { BracketSize } from "./BracketSize";
import type { BracketStyle } from "./BracketStyle";
import type { DivisionStyle } from "./DivisionStyle";
import type { MathNode } from "./MathNode";
import type { RefinedAddOrSubOperator } from "./RefinedAddOrSubOperator";
import type { RefinedMulOrDivOperation } from "./RefinedMulOrDivOperation";
import type { RelationOperator } from "./RelationOperator";
import type { ScientificNotationStyle } from "./ScientificNotationStyle";
import type { SpecialMiddleScript } from "./SpecialMiddleScript";

export type MathNodeContent = "Empty" | { "Text": string } | { "String": string } | { "Integration": { integrand: MathNode, variable: string, lower_limit: MathNode | null, upper_limit: MathNode | null, } } | { "Limit": { function: MathNode, variable: string, approaching_value: MathNode, } } | { "Multiplications": { terms: Array<[RefinedMulOrDivOperation, MathNode]>, } } | { "Additions": { terms: Array<[RefinedAddOrSubOperator, MathNode]>, } } | { "Division": { numerator: MathNode, denominator: MathNode, style: DivisionStyle, } } | { "SumNotation": { summand: MathNode, variable: MathNode | null, lower_limit: MathNode | null, upper_limit: MathNode | null, } } | { "ProductNotation": { multiplicand: MathNode, variable: MathNode | null, lower_limit: MathNode | null, upper_limit: MathNode | null, } } | { "Fraction": { numerator: MathNode, denominator: MathNode, } } | { "Bracketed": { inner: MathNode, style: BracketStyle, size: BracketSize, } } | { "Matrix": { rows: Array<Array<MathNode>>, } } | { "LogFunction": { base: MathNode | null, parameter: MathNode, } } | { "Log2": { parameter: MathNode, } } | { "Log10": { parameter: MathNode, } } | { "Ln": { parameter: MathNode, } } | { "UnaryPostfix": { parameter: MathNode, operator: string, } } | { "UnaryPrefix": { parameter: MathNode, operator: string, } } | { "Abs": { parameter: MathNode, } } | { "Power": { base: MathNode, exponent: MathNode, } } | { "CustomFunction": { name: MathNode, parameters: Array<MathNode>, } } | { "SimpleUnaryFunction": { name: string, parameter: MathNode, } } | { "SimpleMultinaryFunction": { name: string, parameters: Array<MathNode>, } } | { "Quantity": { number: string, unit: MathNode | null, } } | { "Identifier": { body: string, pre_script: MathNode | null, mid_script: SpecialMiddleScript | null, post_script: MathNode | null, primes: number, is_function: boolean, } } | { "Script": { subscripts: Array<MathNode>, superscripts: Array<MathNode>, } } | { "Unit": { original_form: MathNode, flattened_form: MathNode, } } | { "ScientificNotation": { magnitude: MathNode, style: ScientificNotationStyle, } } | { "BaseUnit": string } | { "Relationship": { lhs: MathNode, rhs: MathNode, operator: RelationOperator, } } | { "VariableDefinition": { name: MathNode, definition: MathNode | null, } } | { "FunctionDefinition": { custom_function: MathNode, definition: MathNode | null, } };
