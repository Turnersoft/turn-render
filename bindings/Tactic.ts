// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { Case } from "./Case";
import type { EliminationMethod } from "./EliminationMethod";
import type { Goal } from "./Goal";
import type { MathNode } from "./MathNode";

/**
 * Represents a structured proof tactic
 */
export type Tactic =
  | { "Introduction": { variable: string; assumption: MathNode | null } }
  | { "Elimination": { target: MathNode; method: EliminationMethod } }
  | {
    "Substitution": {
      target: MathNode;
      replacement: MathNode;
      location: Array<number> | null;
    };
  }
  | {
    "TheoremApplication": {
      theorem_name: string;
      instantiation: Array<[string, MathNode]>;
      target: MathNode | null;
    };
  }
  | { "CaseAnalysis": { cases: Array<Case> } }
  | { "Induction": { variable: string; base_case: Goal; inductive_step: Goal } }
  | { "Contradiction": { assumption: MathNode } }
  | "DirectProof"
  | {
    "Custom": { name: string; description: string; arguments: Array<string> };
  };
