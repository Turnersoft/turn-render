// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { FailedAttempt } from "./FailedAttempt";
import type { MathNode } from "./MathNode";
import type { ProofDisplayNode } from "./ProofDisplayNode";
import type { RichText } from "./RichText";
import type { SearchTreeDisplay } from "./SearchTreeDisplay";
import type { TheoremReference } from "./TheoremReference";

/**
 * Display representation of automated tactics
 */
export type AutomatedTacticDisplay = {
  "FindProof": {
    target_relation: MathNode;
    search_strategy: RichText;
    theorems_considered: Array<TheoremReference>;
    proof_found: ProofDisplayNode | null;
  };
} | {
  "Simplify": {
    target_expression: MathNode;
    simplification_rules: Array<RichText>;
    final_result: MathNode;
  };
} | {
  "ByAssumption": {
    matching_assumption: MathNode;
    assumption_name: RichText;
    match_explanation: RichText;
  };
} | {
  "Contradiction": {
    contradictory_statements: Array<MathNode>;
    contradiction_explanation: RichText;
    ex_falso_principle: RichText;
  };
} | {
  "Auto": {
    search_tree: SearchTreeDisplay | null;
    successful_tactics: Array<RichText>;
    failed_attempts: Array<FailedAttempt>;
  };
};
