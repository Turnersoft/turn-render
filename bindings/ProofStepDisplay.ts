// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { ProofGoalChange } from "./ProofGoalChange";
import type { ProofNodeDisplay } from "./ProofNodeDisplay";
import type { Section } from "./Section";

/**
 * Represents a single step or block within a proof's display.
 */
export type ProofStepDisplay =
  | {
    "Tactic": {
      /**
       * The tactic that was applied
       */
      tactic_name: string;
      /**
       * Parameters of the tactic (if any)
       */
      parameters: Array<string>;
      /**
       * Human-readable description of what happened
       */
      description: Section;
      /**
       * Before/after state (optional for interactivity)
       */
      state_change: ProofGoalChange | null;
    };
  }
  | { "Statement": { claim: Section; justification: Section } }
  | { "CaseAnalysis": { introduction: Section | null; cases: Array<Section> } }
  | { "NestedProof": ProofNodeDisplay };
