// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { MathNode } from "./MathNode";
import type { ProofCaseNode } from "./ProofCaseNode";
import type { ProofDisplayNode } from "./ProofDisplayNode";
import type { RichText } from "./RichText";
import type { RichTextSegment } from "./RichTextSegment";
import type { SectionContentNode } from "./SectionContentNode";

/**
 * Represents a single step or block within a proof's display
 */
export type ProofStepNode =
  | {
    "Statement": {
      claim: Array<RichTextSegment>;
      justification: Array<RichTextSegment>;
    };
  }
  | { "Elaboration": Array<SectionContentNode> }
  | {
    "CaseAnalysis": {
      introduction: RichText | null;
      cases: Array<ProofCaseNode>;
    };
  }
  | {
    "InductiveProof": {
      variable_of_induction: MathNode;
      base_case: ProofDisplayNode;
      inductive_hypothesis: RichText;
      inductive_step: ProofDisplayNode;
    };
  }
  | { "Assume": RichText }
  | { "Goal": RichText }
  | { "NestedProof": ProofDisplayNode };
