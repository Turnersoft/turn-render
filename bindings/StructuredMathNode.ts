// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { AbstractionMetadata } from "./AbstractionMetadata";
import type { CollapsibleBlockNode } from "./CollapsibleBlockNode";
import type { LinkTarget } from "./LinkTarget";
import type { MathNode } from "./MathNode";
import type { ParagraphNode } from "./ParagraphNode";
import type { ProofDisplayNode } from "./ProofDisplayNode";
import type { RichTextSegment } from "./RichTextSegment";
import type { SectionContentNode } from "./SectionContentNode";
import type { SelectableProperty } from "./SelectableProperty";
import type { TheoremLikeKind } from "./TheoremLikeKind";
import type { TheoremStatement } from "./TheoremStatement";

/**
 * Represents formal mathematical structures like definitions, theorems, etc.
 */
export type StructuredMathNode =
  | {
    "Definition": {
      term_display: Array<RichTextSegment>;
      formal_term: MathNode | null;
      label: string | null;
      body: Array<SectionContentNode>;
      abstraction_meta: AbstractionMetadata | null;
      selectable_properties: Array<SelectableProperty>;
    };
  }
  | {
    "TheoremLike": {
      kind: TheoremLikeKind;
      label: string | null;
      statement: TheoremStatement;
      proof: ProofDisplayNode | null;
      abstraction_meta: AbstractionMetadata | null;
    };
  }
  | {
    "Example": {
      label: string | null;
      introduction: Array<SectionContentNode>;
      body: Array<SectionContentNode>;
      explanation: Array<SectionContentNode>;
    };
  }
  | { "Remark": { label: string | null; body: Array<SectionContentNode> } }
  | {
    "Axiom": {
      label: string | null;
      statement: Array<SectionContentNode>;
      abstraction_meta: AbstractionMetadata | null;
    };
  }
  | {
    "Exercise": {
      label: string | null;
      problem_statement: Array<SectionContentNode>;
      hints: Array<CollapsibleBlockNode>;
      solution: CollapsibleBlockNode | null;
    };
  }
  | {
    "ConstructorDefinition": {
      title_display: Array<RichTextSegment>;
      label: string | null;
      body: Array<SectionContentNode>;
      formal_parameters: Array<[string, Array<RichTextSegment>]>;
      return_type_summary: Array<RichTextSegment>;
      return_type_link: LinkTarget | null;
      abstraction_meta: AbstractionMetadata | null;
    };
  }
  | {
    "CollectionView": {
      collection_type: string;
      description: ParagraphNode;
      variants: Array<[string, string]>;
      variant_links: Array<LinkTarget>;
      abstraction_meta: AbstractionMetadata | null;
    };
  };
