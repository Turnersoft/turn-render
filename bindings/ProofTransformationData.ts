// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { InstantiationMap } from "./InstantiationMap";
import type { InteractiveElement } from "./InteractiveElement";
import type { InteractiveExpression } from "./InteractiveExpression";
import type { PatternMatch } from "./PatternMatch";
import type { TransformationWorkflowStage } from "./TransformationWorkflowStage";
import type { VisualConnection } from "./VisualConnection";

/**
 * Represents the complete interactivity data for a proof transformation
 */
export type ProofTransformationData = {
  /**
   * The tactic that performed this transformation
   */
  tactic_name: string;
  /**
   * The workflow stage this transformation represents
   */
  workflow_stage: TransformationWorkflowStage;
  /**
   * Source expressions from the previous proof node
   */
  source_expressions: Array<InteractiveExpression>;
  /**
   * Target expressions in the current proof node
   */
  target_expressions: Array<InteractiveExpression>;
  /**
   * Pattern matching data showing how expressions were matched
   */
  pattern_matches: Array<PatternMatch>;
  /**
   * Instantiation maps showing variable substitutions
   */
  instantiations: Array<InstantiationMap>;
  /**
   * Visual connections between expressions
   */
  visual_connections: Array<VisualConnection>;
  /**
   * Interactive elements that can be highlighted or selected
   */
  interactive_elements: Array<InteractiveElement>;
};
